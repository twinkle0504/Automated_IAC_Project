pipeline {
  agent any

  environment {
    TF_IN_AUTOMATION = 'true'
  }

  stages {

// Checks out code from git
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/twinkle0504/Automated_IAC_Project.git'
      }
    }

    /*stage('Terraform Init') {
      steps {
        dir('IAC_Project/terraform') {
          sh 'terraform init'
        }
      }
    }

    stage('Terraform Plan') {
      steps {
        dir('IAC_Project/terraform') {
          sh 'terraform plan'
        }
      }
    }

    stage('Terraform Apply') {
      steps {
        dir('IAC_Project/terraform') {
          sh 'terraform apply -auto-approve'
        }
      }
    }*/


    stage('KICS Scan') {
  steps {
    dir('IAC_Project/terraform') {
      sh '''
        mkdir -p kics-results
        docker run --rm \
          -v "$(pwd):/path" \
          checkmarx/kics:latest scan -p /path --no-progress \
          --report-formats html,json \
          --output-path /path/kics-results || true
      '''
    }
  }
}

    /*stage('Commit & Push KICS Report') {
      steps {
        dir('IAC_Project/terraform') {
          script {
            sh '''
              git config --global user.name "twinkle0504"
              git config --global user.email "twinklehedaoo@gmail.com"

              git add kics-results/*

              git commit -m "KICS Scan Report Added [ci skip]" || echo "Nothing to commit"
            '''
          }


          withCredentials([string(credentialsId: 'github-token', variable: 'GIT_TOKEN')]) {
            sh '''
              git push https://$GIT_TOKEN@github.com/twinkle0504/Automated_IAC_Project.git
            '''
          }
        }
      }
    }*/

stage('Upload KICS Report to DefectDojo') {
  steps {
    withCredentials([string(credentialsId: 'DEFECTDOJO_API_TOKEN', variable: 'DD_API_TOKEN')]) {
      dir('IAC_Project/terraform/kics-results') {
        sh '''
          docker run --rm \
            -e DEFECTDOJO_API_TOKEN=$DD_API_TOKEN \
            -e DEFECTDOJO_URL=http://localhost:9000 \
            -v "$(pwd)":/reports \
            defectdojo/defectdojo-api-import:latest \
            --file /reports/results.json \
            --product-name "IaC Project" \
            --engagement-name "KICS Scan" \
            --test-type "SAST Scan" \
            --scan-type "KICS" \
            --api-token $DEFECTDOJO_API_TOKEN \
            --user "admin" \
            --url http://localhost:9000
        '''
      }
    }
  }
}


  }

post {
  always {
    archiveArtifacts artifacts: 'IAC_Project/terraform/kics-results/*', allowEmptyArchive: true
  }
}

}

